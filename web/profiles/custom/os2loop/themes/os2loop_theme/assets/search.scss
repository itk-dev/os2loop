@use "sass:map";

// During development you can insert
//
//   jQuery(() => jQuery('[data-autocomplete-path]').val('first').keydown())
//
// at the end of app.js to trigger the search autocomplete.
//
// Uncomment the following line to keep the suggestions visible:
// .search-api-autocomplete-search { display: block !important; }

// @see https://gist.github.com/JacobDB/0ffffaf8e772c12acf7102edb8a302be
// Replace letters
@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// Encode symbols
@function url-encode($string) {
    $map: (
        "%": "%25",
        "<": "%3C",
        ">": "%3E",
        " ": "%20",
        "!": "%21",
        "*": "%2A",
        "'": "%27",
        '"': "%22",
        "(": "%28",
        ")": "%29",
        ";": "%3B",
        ":": "%3A",
        "@": "%40",
        "&": "%26",
        "=": "%3D",
        "+": "%2B",
        "$": "%24",
        ",": "%2C",
        "/": "%2F",
        "?": "%3F",
        "#": "%23",
        "[": "%5B",
        "]": "%5D"
    );

    $new: $string;

    @each $search, $replace in $map {
        $new: str-replace($new, $search, $replace);
    }

    @return $new;
}

// Format the SVG as a URL
@function inline-svg($string) {
    @return url('data:image/svg+xml,#{url-encode($string)}');
}

$search-icon-size: 40px;
$search-icon-padding: 10px;

$icon-color: $grey;
// svg content from node_modules/bootstrap-icons/icons/search.svg.
$search-icon: inline-svg('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#{$icon-color}" class="bi bi-search" viewBox="0 0 16 16"><path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/></svg>');

#block-os2loop-search-db-search-form,
#block-os2loop-search-db-search,
#views-exposed-form-os2loop-search-db-page-search-form {
  // Hide submit button and search field label.
  .form-actions,
  .form-type-search-api-autocomplete label {
    display: none;
  }

  .form-autocomplete {
    border-radius: 1em;

    // Pull search field in front of suggestions.
    // position: relative;
    // z-index: 999;

    // transition: border-radius .1s;

    // Make room for background images
    padding-left: 50px;
    padding-right: 50px;

    // // Hide throbber when not loading.
    // &:not(.ui-autocomplete-loading) {
    //   background-image: none;
    // }

    background: #fff $search-icon $search-icon-padding 50%/24px 24px no-repeat;
  }

  .search-api-autocomplete-has-suggestions {
    .form-autocomplete {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
  }

    // .search-api-autocomplete-has-suggestions {
    //   outline: solid 10px green;

    //   .input-group-text {
    //     color: blue;
    //   }
    // }

}


.search-api-autocomplete-search.ui-widget.ui-widget-content {
  // padding-left: $search-icon-padding;
  // padding-right: $search-icon-padding;
  padding-bottom: 1em;
  border-bottom-left-radius: 1em;
  border-bottom-right-radius: 1em;
  border-top: none;
}



// @see search_api_autocomplete/css/search_api_autocomplete.css
// .search-api-autocomplete-suggestion {
//   padding: 3px 5px;
//   position: relative;
// }

// .search-api-autocomplete-search .ui-menu-item-wrapper {
//   border: 0;
//   color: #333;
//   margin: 0;
//   padding: 0;

//   &.ui-state-active {
//     // @todo Can we improve this?
//     outline: solid 1px blue;
//   }
// }

// .search-api-autocomplete-search .ui-menu-item {
//   list-style-image: none;
// }

// .search-api-autocomplete-search .ui-menu-item:hover {
//   background: #eee;
// }

// .search-api-autocomplete-search .ui-menu-item a {
//   text-decoration: none;
// }

// .search-api-autocomplete-suggestion .autocomplete-suggestion-note {
//   font-size: 90%;
// }

// .search-api-autocomplete-suggestion .autocomplete-suggestion-user-input {
//   font-weight: bold;
// }

// .search-api-autocomplete-suggestion .autocomplete-suggestion-results-count {
//   position: absolute;
//   right: 0.2em;
// }

// search_api_autocomplete/css/search_api_autocomplete.css

.search-api-autocomplete-search .ui-menu-item:hover {
  background: none;
}

$search-highlight-color: $light-grey;

.search-api-autocomplete-search .ui-menu-item-wrapper {
  // border: 0;
  // color: #333;
  // margin: 0;
  // padding: 0;

  display: block;

  &:hover {
    background: $search-highlight-color;
  }

  &.ui-state-active {
    background: $search-highlight-color;
  }
}

.search-autocomplete {
  @each $content-type in $content-types {
    &.search-autocomplete-#{$content-type} {
      @include icon(map.get($icons, $content-type), $search-icon-size - $search-icon-padding, $margin-right: $search-icon-padding);
    }
  }

  padding-left: $search-icon-padding;
  padding-right: $search-icon-padding;

  .search-autocomplete-suggestion {
    display: inline-block;
    vertical-align: middle;

    h2 {
      font-size: 1em;
    }
  }
}

// @see https://blog.maximerouiller.com/post/remove-the-x-from-internet-explorer-and-chrome-input-type-search/
// clears the 'X' from Chrome
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  display: none;
}
